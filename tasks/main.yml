---
- name: "Fetch information for {{ url }}"
  ansible.builtin.uri:
    url: "{{ url }}"
    method: HEAD
  register: _url_info

- name: "Fetch information for {{ path }}"
  ansible.builtin.stat:
    path: "{{ path }}"
  register: _stat

- name: "Fetch extended information for {{ path }}"
  community.general.xattr:
    path: "{{ path }}"
  register: _xattr
  when: _stat.stat.exists

- name: Find out if a download is required
  ansible.builtin.set_fact:
    download_required: "{{
      (not _stat.stat.exists) or
      ('etag' not in _url_info) or
      (fetch_url_xattr_etag not in _xattr.xattr) or
      (_stat.stat.exists and _xattr.xattr[fetch_url_xattr_etag] != ('b64:' ~ _url_info.etag | b64encode))
      }}"

- name: "{{ download_required | ternary('Fetch file from ' ~ url, 'Download not needed') }}"
  ansible.builtin.get_url:
    url: "{{ url }}"
    dest: "{{ path }}"
    mode: "{{ mode | default(omit) }}"
    owner: "{{ owner | default(omit) }}"
    group: "{{ group | default(omit) }}"
    force: true
  when: download_required
  register: _file_download

- name: Ensure file properties are set
  ansible.builtin.file:
    path: "{{ path }}"
    mode: "{{ mode | default(omit) }}"
    owner: "{{ owner | default(omit) }}"
    group: "{{ group | default(omit) }}"
  register: _file_properties

- name: "Save state information for {{ path }}{{ download_required | ternary('', ' (not needed)') }}"  # noqa name[template]
  community.general.xattr:
    path: "{{ path }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  loop:
    - key: "{{ fetch_url_xattr_url }}"
      value: "{{ url }}"
    - key: "{{ fetch_url_xattr_etag }}"
      value: "b64:{{ _url_info.etag | b64encode }}"
  loop_control:
    label: "{{ item.key }}={{ item.value }}"
  when: download_required

- name: Set overall changed status
  ansible.builtin.set_fact:
    fetch_url_is_changed: "{{ (_file_download.changed or _file_properties.changed) }}"
